spring.profiles.active=local
spring.config.location=currentdir/config
spring.application.name=springboot3x-kafka

server.port=38084

management.endpoints.web.exposure.include=*

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.client.registry-fetch-interval-seconds=3
eureka.client.disable-delta=false
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.lease-renewal-interval-in-seconds=3
eureka.instance.lease-expiration-duration-in-seconds=5

spring.session.timeout=1800

mybatis.mapper-locations=classpath*:mybatis/**/*.xml
mybatis.type-aliases-package=spring
mybatis.configuration.cache-enabled=true
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.jdbc-type-for-null=varchar
mybatis.configuration.default-statement-timeout=300

sample.kafka.auto-offset-reset=earliest
sample.kafka.bootstrap-servers=172.28.200.30:9092
sample.kafka.group-id=mygroup

# org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1 라이브러리 적용 시 DriverSpy 를 사용하세요.
#   net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#   실제 드라이버 파일은 'log4jdbc.log4j2.properties' 파일에 정의합니다.
#   h2 는 jdbcUrl 을 resolve 할 수 없으므로 실제 드라이버 파일을 사용해 주세요.
#sample.jdbc.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
sample.jdbc.datasource.driverClassName=org.h2.Driver
#sample.jdbc.datasource.jdbcUrl=jdbc:sqlserver://서버IP주소:1433;DatabaseName=데이터베이스명  (original)
#sample.jdbc.datasource.jdbcUrl=jdbc:log4jdbc:sqlserver://서버IP주소:1433;DatabaseName=데이터베이스명 (apply log4jdbc)
# init=runscript from 'classpath:init.sql'; 옵션은 first connection 을 생성할 때 init.sql 을 실행합니다. (h2 only)
sample.jdbc.datasource.jdbcUrl=jdbc:h2:mem:~/approval;init=runscript from 'classpath:init.sql';db_close_delay=-1;
sample.jdbc.datasource.username=sa
sample.jdbc.datasource.password=
sample.jdbc.datasource.maximumPoolSize=3
sample.jdbc.datasource.minimumIdle=2
sample.jdbc.datasource.connectionTimeout=250
sample.jdbc.datasource.initializationFailTimeout=0
