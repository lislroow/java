<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="3 seconds">
  <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} [%C{40}]:%L ## %msg%n</pattern>
    </encoder>
  </appender>

  <property name="logback.path" value="./logs"/>
  <appender name="LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${logback.path}/debug.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${logback.path}/backup/%d{yyyyMM, aux}/debug.log-%d{yyyyMMdd_HH}.gz</fileNamePattern>
    </rollingPolicy>
    <encoder>
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} [%C{40}]:%L ## %msg%n</pattern>
    </encoder>
  </appender>
  <appender name="file-async" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="LOG_FILE" />
    <queueSize>4096</queueSize>
    <discardingThreshold>20</discardingThreshold>
    <includeCallerData>false</includeCallerData>
    <neverBlock>false</neverBlock>
  </appender>
  
  <statusListener class="ch.qos.logback.core.status.NopStatusListener" />
  
  <root level="info">
    <appender-ref ref="STDOUT"/>
    <appender-ref ref="file-async"/>
  </root>
  
  
  <logger name="com.netflix.discovery" level="info" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.apache.http" level="info" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.apache.hc" level="info" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  
  <!-- 필수 -->
  <logger name="org.springframework.web.servlet.DispatcherServlet" level="debug" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.springframework.core.log.LogFormatUtils" level="debug" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.springframework.web.servlet.handler.AbstractHandlerMapping" level="debug" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.springframework.web.method.support.InvocableHandlerMethod" level="debug" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" level="debug" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor" level="debug" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver" level="debug" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <logger name="org.springframework.web.servlet.FrameworkServlet" level="debug" additivity="false">
    <appender-ref ref="STDOUT"/>
  </logger>
  <!-- //필수 -->
</configuration>
