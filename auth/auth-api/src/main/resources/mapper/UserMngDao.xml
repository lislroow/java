<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.auth.api.dao.UserMngDao">
  
  <select id="selectNextId">
    SELECT /* UserDao.selectNextId */
           #{idprefix}||TO_CHAR(NOW(), 'YYYYMMDDHH') || LPAD(NEXTVAL('sq_user_id')||'', 5, '0')
            AS id
  </select>
  
  <select id="allManagers">
    SELECT /* UserMngDao.allManagers */
           A.id
           , A.login_id
           , A.login_pwd
           , A.mgr_name
           , A.roles
           , A.enable_yn
           , A.locked_yn
           , A.pwd_exp_date
           , A.create_id
           , A.create_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.create_id) AS create_name
           , A.modify_id
           , A.modify_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.modify_id) AS modify_name
    FROM   au_manager A
    ORDER BY A.id DESC
  </select>
  
  <select id="findManagerById">
    SELECT /* UserMngDao.findManagerById */
           A.id
           , A.login_id
           , A.login_pwd
           , A.mgr_name
           , A.roles
           , A.enable_yn
           , A.locked_yn
           , A.pwd_exp_date
           , A.create_id
           , A.create_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.create_id) AS create_name
           , A.modify_id
           , A.modify_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.modify_id) AS modify_name
    FROM   au_manager A
    WHERE  A.id = #{id}
  </select>
  
  <select id="findManagerByLoginId">
    SELECT /* UserMngDao.findManagerByLoginId */
           A.id
           , A.login_id
           , A.login_pwd
           , A.mgr_name
           , A.roles
           , A.enable_yn
           , A.locked_yn
           , A.pwd_exp_date
           , A.create_id
           , A.create_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.create_id) AS create_name
           , A.modify_id
           , A.modify_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.modify_id) AS modify_name
    FROM   au_manager A
    WHERE  A.login_id = #{loginId}
  </select>
  
  <select id="findManagers">
    SELECT /* UserMngDao.findManagers */
           A.id
           , A.login_id
           , A.login_pwd
           , A.mgr_name
           , A.roles
           , A.enable_yn
           , A.locked_yn
           , A.pwd_exp_date
           , A.create_id
           , A.create_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.create_id) AS create_name
           , A.modify_id
           , A.modify_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.modify_id) AS modify_name
    FROM   au_manager A
    ORDER BY A.id DESC
  </select>
  
  <select id="searchManagers">
    SELECT /* UserMngDao.searchManagers */
           A.id
           , A.login_id
           , A.login_pwd
           , A.mgr_name
           , A.roles
           , A.enable_yn
           , A.locked_yn
           , A.pwd_exp_date
           , A.create_id
           , A.create_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.create_id) AS create_name
           , A.modify_id
           , A.modify_time
           , (SELECT mgr_name FROM au_manager WHERE id = A.modify_id) AS modify_name
    FROM   au_manager A
    <where>
      <if test="loginId != null and !''.equals(loginId)">
        AND UPPER(A.login_id) LIKE UPPER(#{loginId}) || '%'
      </if>
      <if test="mgrName != null and !''.equals(mgrName)">
        AND UPPER(A.mgr_name) LIKE UPPER(#{mgrName}) || '%'
      </if>
      <if test="roles != null and !''.equals(roles)">
        AND A.roles = #{roles}
      </if>
      <if test="enableYn != null and !''.equals(enableYn)">
        AND A.enable_yn = #{enableYn}
      </if>
      <if test="lockedYn != null and !''.equals(lockedYn)">
        AND A.locked_yn = #{lockedYn}
      </if>
    </where>
    ORDER BY A.id DESC
  </select>
  
  <insert id="addManager">
    INSERT /* UserMngDao.addManager */
      INTO au_manager (
        id,
        login_id,
        login_pwd,
        mgr_name,
        roles,
        enable_yn,
        locked_yn,
        pwd_exp_date,
        create_time,
        modify_time,
        create_id,
        modify_id
      ) VALUES (
        #{id},
        #{loginId},
        #{loginPwd},
        #{mgrName},
        #{roles},
        #{enableYn},
        #{lockedYn},
        #{pwdExpDate},
        now(),
        now(),
        #{createId},
        #{modifyId}
      )
  </insert>
  
  <update id="modifyManagerById">
    UPDATE /* UserMngDao.modifyManagerById */
           au_manager
       SET roles = #{roles},
           enable_yn = #{enableYn},
           locked_yn = #{lockedYn},
           modify_time = now(),
           modify_id = #{modifyId}
     WHERE id = #{id}
  </update>
  
  <delete id="removeManagerById">
    DELETE /* UserMngDao.removeManagerById */
      FROM au_manager
     WHERE id = #{id}
  </delete>
  
  <select id="findManagerLoginPwdById">
    SELECT /* UserMngDao.findManagerLoginPwdById */
           A.login_pwd
    FROM   au_manager A
    WHERE  A.id = #{id}
  </select>
  
  <update id="changeManagerLoginPwdById">
    UPDATE /* UserMngDao.changeManagerLoginPwdById */
           au_manager
       SET login_pwd = #{newLoginPwd},
           pwd_exp_date = CURRENT_DATE + INTERVAL '90 day',
           modify_time = now(),
           modify_id = #{modifyId}
     WHERE id = #{id}
  </update>
  
</mapper>
