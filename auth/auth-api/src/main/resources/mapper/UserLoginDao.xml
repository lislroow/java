<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.auth.common.login.dao.UserLoginDao">
  
  <select id="selectManagerByLoginId">
    SELECT /* UserLoginDao.selectManagerByLoginId */
           A.id
           , A.login_id
           , A.login_pwd
           , A.roles
           , A.mgr_name
           , A.enable_yn
           , A.locked_yn
           , A.pwd_exp_date
    FROM   au_manager A
    <where>
       AND A.login_id = #{loginId}
    </where>
  </select>
  
  <select id="selectMemberByLoginId">
    SELECT /* UserLoginDao.selectMemberByLoginId */
           A.id
           , A.login_id
           , A.login_pwd
           , A.roles
           , A.realname
           , A.nickname
           , A.enable_yn
           , A.locked_yn
           , A.pwd_exp_date
    FROM   au_member A
    WHERE  A.login_id = #{loginId}
  </select>
  
  <select id="selectMemberOAuth2ByOAuth2Id">
    SELECT /* UserLoginDao.selectMemberOAuth2ByOAuth2Id */
           A.id
           , A.oauth2_id
           , A.registration_id
           , A.email
           , B.login_id
           , B.login_pwd
           , B.roles
           , B.realname
           , B.nickname
           , B.enable_yn
           , B.locked_yn
           , B.pwd_exp_date
    FROM   au_member_oauth A
      LEFT JOIN au_member B ON A.id = B.id
    <where>
       AND A.oauth2_id = #{oauth2Id}
    </where>
  </select>
  
  <select id="selectIdByEmail">
    SELECT /* UserLoginDao.selectIdByEmail */
           A.id
    FROM   au_member A
    <where>
       AND A.login_id = #{email}
    </where>
  </select>
  
  <insert id="insertMemberOAuth2">
    INSERT /* UserLoginDao.insertMemberOAuth2 */
      INTO au_member_oauth (
        id
        , oauth2_id
        , registration_id
        , email
        , nickname
        , create_time
        , modify_time
        , create_id
        , modify_id
      ) VALUES (
        #{id}
        , #{oauth2Id}
        , #{registrationId}
        , #{email}
        , #{nickname}
        , now()
        , now()
        , #{id}
        , #{id}
      )
  </insert>
  
  <insert id="insertMember">
    INSERT /* UserLoginDao.insertMember */
      INTO au_member (
        id
        , login_id
        , roles
        , nickname
        , enable_yn
        , locked_yn
        , pwd_exp_date
        , create_time
        , modify_time
        , create_id
        , modify_id
      ) VALUES (
        #{id}
        , #{loginId}
        , #{roles}
        , #{nickname}
        , #{enableYn}
        , #{lockedYn}
        , CURRENT_DATE
        , now()
        , now()
        , #{id}
        , #{id}
      )
  </insert>
  
</mapper>
